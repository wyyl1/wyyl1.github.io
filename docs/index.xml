<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://wyyl1.github.io/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 09 Jul 2021 21:00:03 +0800</lastBuildDate><atom:link href="https://wyyl1.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>第 3 章 调度器</title>
      <link>https://wyyl1.github.io/post/java/book/spring-reactor-3/chap03/</link>
      <pubDate>Fri, 09 Jul 2021 21:00:03 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/spring-reactor-3/chap03/</guid>
      <description>笔记来源：《Java编程方法论:响应式Spring Reactor 3设计与实现》ISBN:9787121394768 作者：知秋 出版时间：2020年09月</description>
    </item>
    
    <item>
      <title>第 2 章 对Flux的探索</title>
      <link>https://wyyl1.github.io/post/java/book/spring-reactor-3/chap02/</link>
      <pubDate>Fri, 09 Jul 2021 21:00:02 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/spring-reactor-3/chap02/</guid>
      <description>笔记来源：《Java编程方法论:响应式Spring Reactor 3设计与实现》ISBN:9787121394768 作者：知秋 出版时间：2020年09月 Flux</description>
    </item>
    
    <item>
      <title>第 1 章 响应式编程概述</title>
      <link>https://wyyl1.github.io/post/java/book/spring-reactor-3/chap01/</link>
      <pubDate>Fri, 09 Jul 2021 21:00:01 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/spring-reactor-3/chap01/</guid>
      <description>笔记来源：《Java编程方法论:响应式Spring Reactor 3设计与实现》ISBN:9787121394768 作者：知秋 出版时间：2020年09月 前</description>
    </item>
    
    <item>
      <title>idea 插件</title>
      <link>https://wyyl1.github.io/post/dev_tools/idea/idea-plugins/</link>
      <pubDate>Thu, 06 May 2021 10:00:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/dev_tools/idea/idea-plugins/</guid>
      <description>代码总是被嫌弃写的太烂？装上这个IDEA插件再试试！ SonarLint：是一个代码质量检测插件，可以帮助我们检测出代码中的坏味道 SonarQ</description>
    </item>
    
    <item>
      <title>第零章、计算机概论</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap00/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap00/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 容量单位 （进制转换） 0 / 1 这个二进制的单位称为 bit 。但 bit 太小，在存储数据时每份简单的</description>
    </item>
    
    <item>
      <title>第一章、Linux 是什么与如何学习</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap01/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0801</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap01/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 GNU 计划 GPL 授权 Linux 内核 GPL 优点 软件安全性交佳 软件执行效能交佳 软件除错时间较短 贡献的原始代</description>
    </item>
    
    <item>
      <title>第二章、首次登入与在线求助</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap02/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0802</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap02/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 显示目前支持的语系 1 $ locale 显示日期 1 $ date +%Y/%m/%d 显示日历 1 2 $ cal $ cal 2015 计算器 1 2 # quit 退出 $</description>
    </item>
    
    <item>
      <title>第三章 安装 CentOS 7.x</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap03/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0803</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap03/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥</description>
    </item>
    
    <item>
      <title>第四章、首次登入与在线求助</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap04/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0804</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap04/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 4.2.3 重要的几个热键 [Tab] 命令补全 文件补齐 若安装 bash-completion 软件，则在某些指令后面使用 [Tab] 按键时，可以</description>
    </item>
    
    <item>
      <title>第五章、Linux 的文件权限与目录配置</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap05/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0805</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap05/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 文件可存取的身份 owner 文件拥有者 group 群组（每个账号可以有多个群组） others 其他人 每种身份的权限</description>
    </item>
    
    <item>
      <title>第六章 Linux 文件与目录管理</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap06/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0806</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap06/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 6.1.2 目录的相关操作 操作符 功能 . 当前目录 .. 上一层目录 - 前一个工作目录 ~ 当前用户的家目录</description>
    </item>
    
    <item>
      <title>第七章 Linux 磁盘与文件系统管理</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap07/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0807</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap07/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者：鳥哥 7.2 文件系统的简单操作 7.2.1 磁盘与目录的容量 df：列出文件系统的整体磁盘使用量 du：评估</description>
    </item>
    
    <item>
      <title>第八章、文件与文件系统的压缩,打包与备份</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap08/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0808</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap08/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 8.1 压缩文件的用途与技术 8.2 Linux 系统常见的压缩指令 在Linux的环境中，压缩文件的扩展名</description>
    </item>
    
    <item>
      <title>第九章、vim 程序编辑器</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap09/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0809</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap09/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 9.2 vi 的使用 基本上 vi 共分为三种模式 一般指令模式 (command mode) 编辑模式 (insert mode) 在一般指令模式中可以进</description>
    </item>
    
    <item>
      <title>第十章、认识与学习BASH</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap10/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0810</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap10/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 10.1 认识 BASH 这个 Shell 10.1.3 系统的合法 shell 与 /etc/shells 功能 /bin/bash (就是 Linux 默认的 shell) 系统上合法的 shell 要写入 /etc/shells 这个文</description>
    </item>
    
    <item>
      <title>第十一章、正则表达式与文件格式化处理</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap11/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0811</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap11/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 11.1 开始之前:什么是正则表达式 11.2 基础正则表达式 强悍的符号 特殊符号 代表意义 [:alnum:] 代表英文大</description>
    </item>
    
    <item>
      <title>第十二章、学习 Shell Scripts</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap12/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0812</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap12/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 12.1 什么是 Shell scripts 12.1.1 干嘛学习 shell scripts 虽然 shell script 号称是程序 (program) ，但实际上， shell script 处理数据的速度上 是不</description>
    </item>
    
    <item>
      <title>第十三章、Linux 帐号管理与 ACL 权限设置</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap13/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0813</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap13/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 13.1 Linux 的帐号与群组 13.1.1 使用者识别码: UID 与 GID /etc/passwd ID 与帐号的对应就在 /etc/group 群组关系å 每一个文件都</description>
    </item>
    
    <item>
      <title>第十四章、磁盘配额(Quota)与进阶文件系统管理</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap14/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0814</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap14/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥</description>
    </item>
    
    <item>
      <title>第十五章、例行性工作调度(crontab)</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap15/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0815</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap15/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 15.1 什么是例行性工作调度 15.1.1 Linux 工作调度的种类: at, cron at :at 是个可以处理仅执行一次就结束调度</description>
    </item>
    
    <item>
      <title>第十七章、认识系统服务 (daemons)</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap17/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0816</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap17/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 17.1 什么是 daemon 与服务 (service)</description>
    </item>
    
    <item>
      <title>第十六章、程序管理与 SELinux 初探</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap16/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0816</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap16/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 16.1 什么是进程 (process) 常驻在内存当中的程序通常都是负责一些系统所提供的功能以服务使用者各项</description>
    </item>
    
    <item>
      <title>第二十章、基础系统设置与备份策略</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap20/</link>
      <pubDate>Tue, 20 Apr 2021 10:20:00 +0820</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/chap20/</guid>
      <description>原书：《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 20.1 系统基本设置 网络基础-鸟哥 手动设置固定 IP 自动取得 IP 参数 修改主机名称 1 2 3 4 5 6 7</description>
    </item>
    
    <item>
      <title>加餐（六）| Redis的使用规范小建议</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/extra_meal06/</link>
      <pubDate>Sat, 17 Apr 2021 21:43:12 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/extra_meal06/</guid>
      <description>原文 键值对使用规范 规范一：key 的命名规范 把业务名作为前缀，然后用冒号分隔，再加上具体的业务数据名。这样一来，我们可以通过 key 的前缀区分不同的</description>
    </item>
    
    <item>
      <title>40 | Redis的下一步：基于NVM内存的实践</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap40/</link>
      <pubDate>Sat, 17 Apr 2021 21:01:12 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap40/</guid>
      <description>原文 非易失存储（Non-Volatile Memory，NVM） NVM 内存的特性与使用模式 NVM 内存最大的优势是可以直接持久化保存数据 NVM 内存的访问速度</description>
    </item>
    
    <item>
      <title>加餐（五） | Redis有哪些好用的运维工具？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/extra_meal05/</link>
      <pubDate>Sat, 17 Apr 2021 21:01:12 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/extra_meal05/</guid>
      <description>原文 最基本的监控命令：INFO 命令 INFO 命令会返回丰富的实例运行监控信息，这个命令是 Redis 监控工具的基础 无论是单实例或是集群，建议重点关注一下 sta</description>
    </item>
    
    <item>
      <title>39 | Redis 6.0的新特性：多线程、客户端缓存与安全</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap39/</link>
      <pubDate>Sat, 17 Apr 2021 20:36:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap39/</guid>
      <description>原文 Redis 6.0中的多线程只是指，在客户端请求接收和解析，以及请求后的数据通过网络返回给客户端时，使用了多线程。而命令请求本身的数据读写操作还是</description>
    </item>
    
    <item>
      <title>37 | 数据分布优化：如何应对数据倾斜？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap37/</link>
      <pubDate>Sat, 17 Apr 2021 20:12:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap37/</guid>
      <description>原文</description>
    </item>
    
    <item>
      <title>38 | 通信开销：限制Redis Cluster规模的关键因素</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap38/</link>
      <pubDate>Sat, 17 Apr 2021 20:12:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap38/</guid>
      <description>原文</description>
    </item>
    
    <item>
      <title>36 | Redis支撑秒杀场景的关键技术和实践都有哪些？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chpa36/</link>
      <pubDate>Fri, 16 Apr 2021 21:51:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chpa36/</guid>
      <description>原文 秒杀场景的业务特点是限时限量 秒杀场景包含了多个环节，可以分成秒杀前、秒杀中和秒杀后三个阶段，每个阶段的请求处理需求并不相同，Redis 并</description>
    </item>
    
    <item>
      <title>35 | Codis VS Redis Cluster：我该选择哪一个集群方案？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap35/</link>
      <pubDate>Fri, 16 Apr 2021 21:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap35/</guid>
      <description>原文 精选留言 Kaito 现在 Codis 已经不再维护，但是作为国人开发的 Redis 集群解决方案，其设计思想还是非常值得学习的。也推荐 Go 开发者，读一读 Codis 源码，质量非常高，</description>
    </item>
    
    <item>
      <title>34 | 第23~33讲课后思考题答案及常见问题答疑</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap34/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap34/</guid>
      <description>原文</description>
    </item>
    
    <item>
      <title>Java实战（第2版）学习笔记</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/dir/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/dir/</guid>
      <description>简介 书名：Java实战（第2版） 书号：978-7-115-52148-4 原书名：Modern Java in Action: Lambda, streams, functional and reactive programming 原书号：97816172935</description>
    </item>
    
    <item>
      <title>第 10 章 基于 Lambda 的领域特定语言</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap10/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap10/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 11 章 用 Optional 取代 null</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap11/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap11/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 14 章 Java 模块系统</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap14/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap14/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 15 章 CompletableFuture 及反应式编程背后的概念</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap15/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap15/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 16 章 CompletableFuture：组合式异步编程</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap16/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap16/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 17 章 反应式编程</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap17/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap17/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 18 章 函数式的思考</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap18/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap18/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 19 章 函数式编程的技巧</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap19/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap19/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 20 章 面向对象和函数式编程的混合：Java 和 Scala 的比较</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap20/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap20/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 21 章 结论以及 Java 的未来</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap21/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap21/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 3 章 Lambda 表达式</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap03/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap03/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 4 章 引入流</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap04/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap04/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 5 章 使用流</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap05/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap05/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 6 章 用流收集数据</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap06/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap06/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 7 章 并行数据处理与性能</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap07/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap07/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 8 章 Collection API 的增强功能</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap08/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap08/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第 9 章 重构、测试和调试</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap09/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap09/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>第12章 新的日期和时间 API</title>
      <link>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap12/</link>
      <pubDate>Thu, 15 Apr 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/book/modern-java-in-action/chap12/</guid>
      <description>笔记来源：《Java实战（第2版）》ISBN:978-7-115-52148-4 作者：拉乌尔·加布里埃尔·乌尔玛,马里奥·富斯科,艾伦·米克</description>
    </item>
    
    <item>
      <title>32 | Redis主从同步与故障切换，有哪些坑？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap32/</link>
      <pubDate>Wed, 14 Apr 2021 21:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap32/</guid>
      <description>原文 主从数据不一致 出现原因 主从库间的命令复制是异步进行的 网络延迟 即使从库及时收到了主库的命令，但是，也可能会因为正在处理其它复杂度高的命令（</description>
    </item>
    
    <item>
      <title>33 | 脑裂：一次奇怪的数据丢失</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap33/</link>
      <pubDate>Wed, 14 Apr 2021 21:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap33/</guid>
      <description>原文 脑裂，就是指在主从集群中，同时有两个主节点，它们都能接收写请求。而脑裂最直接的影响，就是客户端不知道应该往哪个主节点写入数据，结果就是不</description>
    </item>
    
    <item>
      <title>REST API 设计最佳实践</title>
      <link>https://wyyl1.github.io/post/practice/rest-api/best-practices-rest-api-design/</link>
      <pubDate>Wed, 14 Apr 2021 21:13:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/practice/rest-api/best-practices-rest-api-design/</guid>
      <description>表现层状态转换 （英语：Representational State Transfer，缩写：REST） 无状态 参考资料 Best practices for REST API design RESTful API Design: 13 Best Practices to Make Your Users Happy 什</description>
    </item>
    
    <item>
      <title>The Gremlin Console</title>
      <link>https://wyyl1.github.io/post/storage/graph/gremlin/the-gremlin-console/</link>
      <pubDate>Mon, 12 Apr 2021 09:53:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/graph/gremlin/the-gremlin-console/</guid>
      <description>The Gremlin Console 官网文档 需要参考官网图数据关系示例图学习 找到 V(1) 不同类型的箭头指向的 V（顶点）- 只能找到部分顶点 1 2 3 4 g.V(1).outE(). group(). by(label). by(inV()) valueMap() 以 Map 格式返回 使用 next() 有时</description>
    </item>
    
    <item>
      <title>The Gremlin Recipes</title>
      <link>https://wyyl1.github.io/post/storage/graph/gremlin/recipes/</link>
      <pubDate>Mon, 12 Apr 2021 09:53:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/graph/gremlin/recipes/</guid>
      <description>The Gremlin Recipes 官网文档 Traversal Recipes 遍历 Between Vertices 顶点之间 g.V(1).bothE()：顶点的所有边 g.V(1).bothE().where(otherV().ha</description>
    </item>
    
    <item>
      <title>《鸟哥的Linux私房菜-基础篇》学习笔记</title>
      <link>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/dir/</link>
      <pubDate>Sat, 10 Apr 2021 10:20:00 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/linux/book/vbird/linux-basic-4e/dir/</guid>
      <description>原书： 《鸟哥的Linux私房菜-基础篇》第四版 | 作者： 鳥哥 第零章、计算机概论 第一章、Linux 是什么与如何学习 第二章、首次登入与在线求助 第三</description>
    </item>
    
    <item>
      <title>Gremlin 入门</title>
      <link>https://wyyl1.github.io/post/storage/graph/gremlin/getting_started/</link>
      <pubDate>Sat, 10 Apr 2021 09:53:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/graph/gremlin/getting_started/</guid>
      <description>Apache TinkerPop Gremlin 以下代码来源 Getting Started 需要参考官网示例图学习 The First Five Minutes 遍历图的基础知识 g.V() 遍历图中所有顶点 g.V(1).outE(&amp;lsquo;knows&amp;rsquo;) 获取顶点“1”延伸出的所有带有标签“knows”的边</description>
    </item>
    
    <item>
      <title>31 | 事务机制：Redis能实现ACID属性吗？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap31/</link>
      <pubDate>Wed, 07 Apr 2021 13:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap31/</guid>
      <description>原文 事务在执行时，会提供专门的属性保证，包括 原子性（Atomicity） 一致性（Consistency） 隔离性（Isolation） 持久性（</description>
    </item>
    
    <item>
      <title>30 | 如何使用Redis实现分布式锁？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap30/</link>
      <pubDate>Wed, 07 Apr 2021 10:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap30/</guid>
      <description>原文 实现分布式锁的两个要求 分布式锁的加锁和释放锁的过程，涉及多个操作。所以，在实现分布式锁时，我们需要保证这些锁操作的原子性 共享存储系统保存</description>
    </item>
    
    <item>
      <title>29 | 无锁的原子操作：Redis如何应对并发访问？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap29/</link>
      <pubDate>Tue, 06 Apr 2021 18:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap29/</guid>
      <description>原文 为了保证并发访问的正确性，Redis 提供了两种方法 加锁 原子操作 并发访问中需要对什么进行控制？ Redis 的两种原子操作方法 把多个操作在 Redis 中实现成一</description>
    </item>
    
    <item>
      <title>28 | Pika：如何基于SSD实现大容量Redis？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap28/</link>
      <pubDate>Tue, 06 Apr 2021 18:30:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap28/</guid>
      <description>原文 基于大内存的大容量实例在实例恢复、主从同步过程中会引起一系列潜在问题，例如 恢复时间增长 主从切换开销大 缓冲区易溢出 固态硬盘版 Redis Pika （360 开</description>
    </item>
    
    <item>
      <title>26 | 缓存异常（下）：如何解决缓存雪崩、击穿、穿透难题？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap26/</link>
      <pubDate>Tue, 06 Apr 2021 10:30:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap26/</guid>
      <description>原文 缓存雪崩 缓存雪崩是指大量的应用请求无法在 Redis 缓存中进行处理，紧接着，应用将大量请求发送到数据库层，导致数据库层的压力激增。 缓存雪崩的主要两</description>
    </item>
    
    <item>
      <title>27 | 缓存被污染了，该怎么办？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap27/</link>
      <pubDate>Tue, 06 Apr 2021 10:30:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap27/</guid>
      <description>原文 在一些场景下，有些数据被访问的次数非常少，甚至只会被访问一次。当这些数据服务完访问请求后，如果还继续留存在缓存中的话，就只会白白占用缓存</description>
    </item>
    
    <item>
      <title>25 | 缓存异常（上）：如何解决缓存和数据库的数据不一致问题？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap25/</link>
      <pubDate>Fri, 02 Apr 2021 19:30:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap25/</guid>
      <description>原文 在实际应用 Redis 缓存时，我们经常会遇到一些异常问题，概括来说有 4 个方面： 缓存中的数据和数据库中的不一致 缓存雪崩 缓存击穿 缓存穿透 缓存和数据库的</description>
    </item>
    
    <item>
      <title>24 | 替换策略：缓存满了怎么办？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap24/</link>
      <pubDate>Fri, 02 Apr 2021 18:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap24/</guid>
      <description>原文 设置多大的缓存容量合适？ 建议把缓存容量设置为总数据量的 15% 到 30%，兼顾访问性能和内存空间开销。 Redis 缓存有哪些淘汰策略？ 默认情况下，Redi</description>
    </item>
    
    <item>
      <title>23 | 旁路缓存：Redis是如何工作的？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap23/</link>
      <pubDate>Fri, 02 Apr 2021 18:18:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap23/</guid>
      <description>原文 缓存的特征 Redis 缓存处理请求的两种情况 Redis 作为旁路缓存的使用操作 缓存的类型 只读缓存 读写缓存</description>
    </item>
    
    <item>
      <title>22 | 第11～21讲课后思考题答案及常见问题答疑</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap22/</link>
      <pubDate>Fri, 02 Apr 2021 18:11:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap22/</guid>
      <description>原文 使用 MEMORY USAGE 命令（需要 Redis 4.0 及以上版本），查询一个键值对占用的内存空间。 1 MEMORY USAGE user:info</description>
    </item>
    
    <item>
      <title>21 | 缓冲区：一个可能引发“惨案”的地方</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap21/</link>
      <pubDate>Fri, 02 Apr 2021 18:10:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap21/</guid>
      <description>原文 缓冲区是用来避免请求或数据丢失的惨案的，但也只有用对了，才能真正起到“避免”的作用 暂存客户端发送的命令数 暂存服务器端返回给客户端的数据结</description>
    </item>
    
    <item>
      <title>定时任务</title>
      <link>https://wyyl1.github.io/post/java/timed_task/</link>
      <pubDate>Fri, 02 Apr 2021 10:07:00 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/timed_task/</guid>
      <description>Elastic-Job Apache 官方文档 参考资料 分布式定时任务调度框架实践 分布式锁的实现之 redis 篇</description>
    </item>
    
    <item>
      <title>19 | 波动的响应延迟：如何应对变慢的Redis？（下）</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap19/</link>
      <pubDate>Thu, 01 Apr 2021 21:30:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap19/</guid>
      <description>原文 文件系统：AOF 模式 write 只要把日志记录写到内核缓冲区，就可以返回了，并不需要等待日志实际写回到磁盘 fsync 需要把日志记录写回到磁盘后才能返回，时</description>
    </item>
    
    <item>
      <title>20 | 删除数据后，为什么内存占用率还是很高？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap20/</link>
      <pubDate>Thu, 01 Apr 2021 21:30:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap20/</guid>
      <description>原文 什么是内存碎片？ 如何判断是否有内存碎片？ 内存利用率的高低直接关系到 Redis 运行效率的高低 为了让用户能监控到实时的内存使用情况，Redis 自身提</description>
    </item>
    
    <item>
      <title>18 | 波动的响应延迟：如何应对变慢的Redis？（上）</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap18/</link>
      <pubDate>Thu, 01 Apr 2021 20:30:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap18/</guid>
      <description>原文 Redis 真的变慢了吗？ 查看 Redis 的响应延迟 当前环境下的 Redis 基线性能 redis-cli 命令提供了–intrinsic-latency 选项，可以用来监测和统计测试期间内</description>
    </item>
    
    <item>
      <title>17 | 为什么CPU结构也会影响Redis的性能？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap17/</link>
      <pubDate>Thu, 01 Apr 2021 20:10:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap17/</guid>
      <description>原文 主流的 CPU 架构 要避免 Redis 总是在不同 CPU 核上来回调度执行，可以使用 taskset 命令把一个程序绑定在一个核上运行。 执行下面的命令，就把 Redis 实例绑在了 0 号核上，</description>
    </item>
    
    <item>
      <title>16 | 异步机制：如何避免单线程模型的阻塞？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap16/</link>
      <pubDate>Thu, 01 Apr 2021 08:10:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap16/</guid>
      <description>原文 影响 Redis 性能的 5 大方面 Redis 内部的阻塞式操作； CPU 核和 NUMA 架构的影响； Redis 关键系统配置； Redis 内存碎片；Redis 缓冲区。 Redis 实例有哪些阻塞点？ 和 Redis 交互时</description>
    </item>
    
    <item>
      <title>15 | 消息队列的考验：Redis有哪些解决方案？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap15/</link>
      <pubDate>Wed, 31 Mar 2021 20:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap15/</guid>
      <description>原文 消息队列的消息存取需求 消息保序 重复消息处理 消息可靠性保证 基于 List 的消息队列解决方案 List 本身就是按先进先出的顺序对数据进行存取 LPUSH 命令 把要发送的</description>
    </item>
    
    <item>
      <title>Java 入门</title>
      <link>https://wyyl1.github.io/post/java/getting_started/</link>
      <pubDate>Tue, 30 Mar 2021 23:07:00 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/getting_started/</guid>
      <description>前言 目录简介 可持续发展线路：个人见解，看看就好 推荐书籍：封神之路 大部分图书都没有注明版本，因为技术更新太快，看的时候找最新版。 购买极客时间课</description>
    </item>
    
    <item>
      <title>14 | 如何在Redis中保存时间序列数据？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap14/</link>
      <pubDate>Fri, 26 Mar 2021 08:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap14/</guid>
      <description>时间序列数据的读写特点 写入特点 插入数据快 要求我们选择的数据类型，在进行数据插入时，复杂度要低，尽量不要阻塞 读特点 查询单条记录 查询时间范围内的</description>
    </item>
    
    <item>
      <title>12 | 有一亿个keys要统计，应该用哪种集合？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap12/</link>
      <pubDate>Tue, 23 Mar 2021 21:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap12/</guid>
      <description>集合类型常见的四种统计模式 聚合统计 排序统计 二值状态统计 基数统计 聚合统计 交集 并集 差集 举例：每天的新增用户数和第二天的留存用户数 一个集合记录所有</description>
    </item>
    
    <item>
      <title>13 | GEO是什么？还可以定义新的数据类型吗？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap13/</link>
      <pubDate>Tue, 23 Mar 2021 21:50:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap13/</guid>
      <description>GEO 面向 LBS (Location-Based Service) 应用的数据类型 GEO 的底层结构 GEO 类型的底层数据结构就是用 Sorted Set 来实现的 GeoHash 编码：将一组经纬度转为一个浮点数 Redis 的基本对象结构 RedisObject 的内部组成包</description>
    </item>
    
    <item>
      <title>11 “万金油”的String，为什么不好用了？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap11/</link>
      <pubDate>Tue, 23 Mar 2021 21:20:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap11/</guid>
      <description>为什么 String 类型内存开销大？ 除了记录实际数据，String 类型还需要额外的内存空间记录数据长度、空间使用等信息，这些信息也叫作元数据。 当实际保存</description>
    </item>
    
    <item>
      <title>极客时间 | 《Redis核心技术与实战》学习笔记</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/dir/</link>
      <pubDate>Mon, 22 Mar 2021 20:23:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/dir/</guid>
      <description>基础篇 06 | 数据同步：主从库如何实现数据一致？ 07 | 哨兵机制：主库挂了，如何不间断服务？ 08 | 哨兵集群：哨兵挂了，主从库还能切换吗？ 09 | 切片集群：</description>
    </item>
    
    <item>
      <title>06 数据同步：主从库如何实现数据一致？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap06/</link>
      <pubDate>Fri, 19 Mar 2021 21:43:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap06/</guid>
      <description>Redis 具有高可靠性 一是数据尽量少丢失 AOF 和 RDB 实现 二是服务尽量少中断 增加副本冗余量 主从库间网络断了怎么办？ repl_backlog_buffer 是一个环形缓冲区，主库会记录自己写到的位</description>
    </item>
    
    <item>
      <title>07 哨兵机制：主库挂了，如何不间断服务？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap07/</link>
      <pubDate>Fri, 19 Mar 2021 21:43:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap07/</guid>
      <description>从库切换为主库，涉及三个问题 主库真的挂了吗？ 该选择哪个从库作为主库？ 怎么把新主库的相关信息通知给从库和客户端呢？ 在 Redis 主从集群中，哨兵机制是实</description>
    </item>
    
    <item>
      <title>08 哨兵集群：哨兵挂了，主从库还能切换吗？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap08/</link>
      <pubDate>Fri, 19 Mar 2021 21:43:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap08/</guid>
      <description>哨兵集群的组成和运行机制 基于 pub/sub 机制的哨兵集群组成 哨兵实例之间可以相互发现，要归功于 Redis 提供的 pub/sub 机制，也就是发布 / 订阅机制。 哨兵只要和主库建立起</description>
    </item>
    
    <item>
      <title>09 切片集群：数据增多了，是该加内存还是加实例？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap09/</link>
      <pubDate>Fri, 19 Mar 2021 21:43:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap09/</guid>
      <description>在使用 RDB 进行持久化时，Redis 会 fork 子进程来完成，fork 操作的用时和 Redis 的数据量是正相关的，而 fork 在执行时会阻塞主线程。数据量越大，fork 操</description>
    </item>
    
    <item>
      <title>加餐（一）| 经典的Redis学习资料有哪些？</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/extra_meal01/</link>
      <pubDate>Fri, 19 Mar 2021 21:43:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/extra_meal01/</guid>
      <description>官网 翻译版的命令参考 工具书：《Redis 使用手册》 可以帮助我们快速地了解或查询 Redis 的日常使用命令和操作方法 原理书：《Redis 设计与实现》 在 Redis</description>
    </item>
    
    <item>
      <title>存储</title>
      <link>https://wyyl1.github.io/post/storage/dir/</link>
      <pubDate>Fri, 19 Mar 2021 21:43:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/dir/</guid>
      <description>Redis 极客时间 | 《Redis核心技术与实战》学习笔记 优秀资料 分布式锁的实现之 redis 篇(小米信息部技术团队) 图数据库 Apache TinkerPop Gremlin 官网 Gremlin 入门 The Gremlin Console 入门 The Gremlin Recipes 入</description>
    </item>
    
    <item>
      <title>编程入门</title>
      <link>https://wyyl1.github.io/post/dir/</link>
      <pubDate>Fri, 19 Mar 2021 21:43:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/dir/</guid>
      <description>Java Java实战（第2版）学习笔记 存储 Redis 开发工具 VS Code VS Code 快捷键 Git Git Gitflow Linux 鸟哥的私房菜 《鸟哥的Linux私房菜-基础篇》学习笔记 实践 页面静态化 Hugo 感</description>
    </item>
    
    <item>
      <title>10 第1～9讲课后思考题答案及常见问题答疑</title>
      <link>https://wyyl1.github.io/post/storage/redis/geekbang/chap10/</link>
      <pubDate>Fri, 19 Mar 2021 21:13:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/storage/redis/geekbang/chap10/</guid>
      <description>不知道计算机底层读写原理，可以直接忽略本章 Redis 基本 IO 模型中还有哪些潜在的性能瓶颈？ 进一步理解阻塞操作对 Redis 单线程性能的影响。 在 Redis 基本 IO 模型中，主</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://wyyl1.github.io/post/dev_tools/git/git/</link>
      <pubDate>Fri, 19 Mar 2021 21:13:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/dev_tools/git/git/</guid>
      <description>常用命令 忽略文件 官方文档 忽略已检入的文件，则必须在添加忽略该文件的规则之前取消跟踪它。 从终端取消跟踪文件。 1 git rm --cached FILENAME</description>
    </item>
    
    <item>
      <title>Gitflow</title>
      <link>https://wyyl1.github.io/post/dev_tools/git/gitflow/</link>
      <pubDate>Fri, 19 Mar 2021 21:13:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/dev_tools/git/gitflow/</guid>
      <description>git-flow 的工作流程 Gitflow Workflow git-flow cheatsheet Git-Flow 基本教學 Github文档 Youtube视频 The gitflow workflow - in less than 5 mins.</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://wyyl1.github.io/post/practice/page_static/hugo/</link>
      <pubDate>Fri, 19 Mar 2021 21:13:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/practice/page_static/hugo/</guid>
      <description>官网 快速入门 Create a New Site 1 hugo new site quickstart Add Some Content 1 hugo new posts/my-first-post.md Start the Hugo server 1 hugo server -D Build static pages 1 hugo -D 常用配置 文章默认模板 Archetypes | Hugo - Static Site Generator | Tutorial 8 1 themes/even/archetypes/default.md 自定义目录模板 1 2 3 4 themes/even/archetypes/dir1.md</description>
    </item>
    
    <item>
      <title>VS Code 快捷键</title>
      <link>https://wyyl1.github.io/post/dev_tools/vs_code/hot_key/</link>
      <pubDate>Fri, 19 Mar 2021 21:13:05 +0800</pubDate>
      
      <guid>https://wyyl1.github.io/post/dev_tools/vs_code/hot_key/</guid>
      <description>快捷键 功能 补充说明 TAB / SHIFT + TAB 选中后整段左右移动 多行一起移动 Cmd + F2 全局替换文字 Option + Shift + ↓ / ↑ 复制当前行 Cmd + Shift + K 删除当前行 Option + ↑ 当前行向上移动</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wyyl1.github.io/post/java/spring/spring-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wyyl1.github.io/post/java/spring/spring-cache/</guid>
      <description>Spring Cache 玩转Spring Cache &amp;mdash; 扩展缓存注解支持失效时间TTL【享学Spring】</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wyyl1.github.io/post/practice/aoeai/summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wyyl1.github.io/post/practice/aoeai/summary/</guid>
      <description>aoeai 设计 CDN 腾讯 CDN 防盗链 referer 防盗链 鉴权配置说明 Hugo 转短链接 图片 Java使用google开源工具Thumbnailator实现图片压缩 国际化</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wyyl1.github.io/post/practice/graph-ql/summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wyyl1.github.io/post/practice/graph-ql/summary/</guid>
      <description>GraphQL 简介 为什么我使用 GraphQL 而放弃 REST API？- InfoQ</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wyyl1.github.io/post/practice/internet-marketing/marketing-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wyyl1.github.io/post/practice/internet-marketing/marketing-1/</guid>
      <description>网络营销 Keyword Tool Google Trends answerthepublic</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wyyl1.github.io/post/practice/k8s/dir/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wyyl1.github.io/post/practice/k8s/dir/</guid>
      <description>K8S 实践 https://kubesphere.io/ https://metersphere.io/ smart doc https://gitee.com/smart-doc-team/smart-doc https://github.com/apache/skywalking</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wyyl1.github.io/post/practice/v2ray/v2ray-getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wyyl1.github.io/post/practice/v2ray/v2ray-getting-started/</guid>
      <description>V2Ray 入门 新 V2Ray 白话文指南 Ubuntu 配置文件目录 1 /usr/local/etc/v2ray/config.json systemctl enable v2ray; systemctl start v2ray MacOS 通过 Homebrew (opens new window)包管理器安装：brew install v2ray，随命令一起下载的 geosite.dat 和 geoip.dat 放置在</description>
    </item>
    
  </channel>
</rss>
